// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Data;

#nullable disable

namespace WebApi.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250823202435_Init_AdvanceRequests")]
    partial class Init_AdvanceRequests
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.AdvanceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idadvancerequest");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("approvedat");

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer")
                        .HasColumnName("contratoid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("createdat");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("notes");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.ToTable("tbladvancerequest", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.AdvanceRequestItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idadvancerequestitem");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdvanceRequestId")
                        .HasColumnType("integer")
                        .HasColumnName("advancerequestid");

                    b.Property<int>("ParcelaId")
                        .HasColumnType("integer")
                        .HasColumnName("parcelaid");

                    b.Property<decimal?>("ValorNaSolicitacao")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("valornasolicitacao");

                    b.HasKey("Id");

                    b.HasIndex("AdvanceRequestId");

                    b.HasIndex("ParcelaId");

                    b.ToTable("tbladvancerequestitem", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("senha");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuarioid");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("tblcliente", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcontrato");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dataalteracao");

                    b.Property<DateTime>("DataInsercao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datainsercao");

                    b.Property<string>("NomeContrato")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nomecontrato");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnType("integer")
                        .HasColumnName("numeroparcelas");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<DateTime>("VencimentoContrato")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vencimentocontrato");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("tblcontrato", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Parcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idparcela");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("integer")
                        .HasColumnName("clienteid");

                    b.Property<int>("ContratoId")
                        .HasColumnType("integer")
                        .HasColumnName("contratoid");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("integer")
                        .HasColumnName("numeroparcela");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("valor");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("vencimento");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.ToTable("tblparcelas", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idusuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("tipousuario");

                    b.HasKey("Id");

                    b.ToTable("tblusuario", (string)null);
                });

            modelBuilder.Entity("WebApi.Models.AdvanceRequest", b =>
                {
                    b.HasOne("WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("WebApi.Models.AdvanceRequestItem", b =>
                {
                    b.HasOne("WebApi.Models.AdvanceRequest", "AdvanceRequest")
                        .WithMany("Items")
                        .HasForeignKey("AdvanceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Parcela", "Parcela")
                        .WithMany()
                        .HasForeignKey("ParcelaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AdvanceRequest");

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("WebApi.Models.Cliente", b =>
                {
                    b.HasOne("WebApi.Models.Usuario", "Usuario")
                        .WithOne("Cliente")
                        .HasForeignKey("WebApi.Models.Cliente", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebApi.Models.Contrato", b =>
                {
                    b.HasOne("WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WebApi.Models.Parcela", b =>
                {
                    b.HasOne("WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Contrato", "Contrato")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Contrato");
                });

            modelBuilder.Entity("WebApi.Models.AdvanceRequest", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WebApi.Models.Contrato", b =>
                {
                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("WebApi.Models.Usuario", b =>
                {
                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}
